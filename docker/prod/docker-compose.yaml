version: '3.1'

services:
  nginx:
    image: nginx:1.15.8
    container_name: 'nginx-container-prod'
    working_dir: /app
    ports:
      - '7777:80'
    volumes:
      - ../../:/app
      - ../common/config/nginx.conf:/etc/nginx/conf.d/default.conf
    links:
      - php-fpm-service
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.labels.type==app


  php-fpm-service:
    image: pkolomytkin/simple-note-php
    working_dir: /app
    container_name: 'php-fpm-container-prod'
    ports:
      - '9000:9000'
    links:
      - postgres_db
    volumes:
      - ../../:/app
    environment:
      APP_ENV: "prod"
      DATABASE_URL_FILE: /run/secrets/db_url
      JWT_SECRET_KEY_FILE: /run/secrets/jwt_private_key
      JWT_PUBLIC_KEY_FILE: /run/secrets/jwt_public_key
      JWT_PASSPHRASE_FILE: /run/secrets/jwt_passphrase
    secrets:
      - db_url
      - jwt_passphrase
      - jwt_private_key
      - jwt_public_key
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.labels.type==app

  postgres_db:
    image: postgres:10.6
    container_name: 'postgres-db-container-prod'
    restart: always
    volumes:
      - postgres_data_volume_prod:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/pg_password
      POSTGRES_USER_FILE: /run/secrets/pg_password
      POSTGRES_DB: simple-note
    secrets:
      - pg_user
      - pg_password
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.labels.type==database

  visualizer:
    image: dockersamples/visualizer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 8080:8080
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role==manager

volumes:
  postgres_data_volume_prod:

secrets:
  db_url:
    external: true

  jwt_passphrase:
    external: true

  jwt_private_key:
    external: true

  jwt_public_key:
    external: true

  pg_user:
    external: true

  pg_password:
    external: true

